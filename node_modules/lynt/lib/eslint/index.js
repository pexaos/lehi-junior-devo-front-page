"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var eslint_1 = require("eslint");
var globby_1 = __importDefault(require("globby"));
var config_1 = require("./config");
var convert_1 = __importDefault(require("./convert"));
/**
 * Lints files using ESLint.
 *
 * @param paths Glob patterns of files to lint.
 * @param options A configuration object that lets you customize how lynt works.
 * @return A `results` object with an errorCount and output.
 */
function eslint(paths, options) {
    var eslintOptions = config_1.getESLintOptions(options);
    var engine = new eslint_1.CLIEngine(eslintOptions);
    var ignores = config_1.getESLintIgnores(options.ignore);
    var filesToLint = paths;
    if (paths.length === 0) {
        filesToLint = options.react ? ['**/*.js', '**.jsx'] : ['**/*.js'];
    }
    var deglobbedFiles = globby_1.default.sync(filesToLint, { ignore: ignores });
    var report = engine.executeOnFiles(deglobbedFiles);
    if (options.fix) {
        eslint_1.CLIEngine.outputFixes(report);
    }
    var results = convert_1.default(report.results);
    return results;
}
exports.default = eslint;
