"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var text_table_1 = __importDefault(require("text-table"));
var chalk_1 = __importDefault(require("chalk"));
var strip_ansi_1 = __importDefault(require("strip-ansi"));
/**
 * Formats a list of lynt errors into a nice looking table. The output is based
 * on the "stylish" formatter, but it removes any inconsistencies between the
 * outputs of ESLint's and TSLint's "stylish".
 *
 * @param errors An array of the errors produced by running lynt.
 * @return A formatted "stylish" table display of the errors.
 */
function format(lyntResults) {
    if (lyntResults.length === 0) {
        return chalk_1.default.bold.green('\n\u2714 No lynt errors\n');
    }
    var output = '\n';
    var totalErrCount = 0;
    var totalFixCount = 0;
    var tableOptions = {
        stringLength: function (str) { return strip_ansi_1.default(str).length; }
    };
    lyntResults.forEach(function (result) {
        output += chalk_1.default.underline(result.filePath) + "\n";
        var formattedErrors = result.errors.map(function (error) { return [
            chalk_1.default.red("  " + error.line + ":" + error.column),
            error.message,
            chalk_1.default.dim(error.ruleName)
        ]; });
        output += text_table_1.default(formattedErrors, tableOptions) + "\n\n";
        totalErrCount += result.errorCount;
        totalFixCount += result.fixCount;
    });
    var errWord = totalErrCount === 1 ? 'error' : 'errors';
    var errMessage = "\u2716 " + totalErrCount + " lynt " + errWord;
    output += chalk_1.default.bold.red(errMessage);
    if (totalFixCount > 0) {
        var fixWord = totalFixCount === 1 ? 'error' : 'errors';
        var fixMessage = " (" + totalFixCount + " " + fixWord + " can be automatically fixed with the `--fix` flag)";
        output += chalk_1.default.bold.yellow(fixMessage);
    }
    output += '\n';
    return output;
}
exports.default = format;
